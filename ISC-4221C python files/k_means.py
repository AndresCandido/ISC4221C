# -*- coding: utf-8 -*-
"""k_means.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17S4r2yDHm54MHwYNMTinzDARP5DiltCu

### Ref: https://www.w3schools.com/python/python_ml_k-means.asp

### Prepare data set
"""

import matplotlib.pyplot as plt

x = [6, 2, 4, 0, 2, -2]
y = [4, 3, -1, 2, -1, 5]

plt.scatter(x, y)
plt.show()

"""### K-means for different numbersof clusters."""

from sklearn.cluster import KMeans
data = list(zip(x, y))
inertias = []

cluster_num = range(1,3)

# k means with different number of clusters 1 ... 10
for i in cluster_num:
    kmeans = KMeans(n_clusters=i)
    kmeans.fit(data)                 # Compute k-means clustering.
    inertias.append(kmeans.inertia_) # inertia is just WCSS

plt.plot(cluster_num, inertias, marker='o')
plt.title('Elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

"""### It seems that the best choice is 2 clusters."""

kmeans = KMeans(n_clusters=2)
kmeans.fit(data)  # Compute k-means clustering on data.

plt.scatter(x, y, c=kmeans.labels_)
plt.show()

